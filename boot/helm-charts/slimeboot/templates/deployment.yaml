{{ range .Values.module }}
  {{- if .enable }}
  {{- if not (eq (default "" .mode) "BundleItem") }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .name }}
  namespace: {{ $.Values.namespace}}
data:
  cfg: |
    {{ . | toJson }}
  {{- if .bundle }}
  {{ range $.Values.module }}
  {{- if not .bundle }}
  cfg_{{ .name }}: |
    {{ . | toJson }}
  {{- end }}
  {{ end }}
  {{ end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name }}
  namespace: {{ $.Values.namespace }}
  labels:
    app: {{.name }}
spec:
  replicas: {{ $.Values.replicaCount }}
  selector:
    matchLabels:
      app: {{.name }}
  template:
    metadata:
      labels:
        app: {{.name }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{.name}}
      securityContext:
      {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
        - name: slime
          securityContext:
          {{- toYaml $.Values.containerSecurityContext | nindent 12 }}
          {{- if $.Values.image.tag }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag}}"
          {{- else }}
          image: "{{ $.Values.image.repository }}"
          {{- end }}
          command:
            - /manager
          args:
          {{- toYaml $.Values.args | nindent 12 }}
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "slime"
            - name: GODEBUG
              value: gctrace=1
          {{- if $.Values.env }}
          {{- toYaml $.Values.env | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: aux-port
              containerPort: {{ $.Values.service.auxiliaryPort }}
              protocol: TCP
            - name: log-source-port
              containerPort: {{ $.Values.service.logSourcePort }}
              protocol: TCP
            - name: mcp-over-xds
              containerPort: {{ $.Values.service.mcpOverXdsPort }}
              protocol: TCP
          resources:
          {{- toYaml $.Values.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              path: "/modules/readyz"
              port: aux-port
            initialDelaySeconds: 3
            periodSeconds: 5
            failureThreshold: 1
          livenessProbe:
            httpGet:
              path: "/modules/livez"
              port: aux-port
            initialDelaySeconds: 3
            periodSeconds: 5
            failureThreshold: 2
          volumeMounts:
            - mountPath: /etc/slime/config
              name: config-volume
            {{- with $.Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - configMap:
            defaultMode: 420
            name: {{ .name }}
          name: config-volume
        {{- with $.Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{.name}}
subjects:
  - kind: ServiceAccount
    name: {{.name}}
    namespace: {{ $.Values.namespace}}
roleRef:
  kind: ClusterRole
  name: slime
  apiGroup: rbac.authorization.k8s.io

---
  {{- if $.Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .name }}
  namespace: {{ $.Values.namespace}}
  labels:
    app: {{ .name }}
  {{- end }}
---

apiVersion: v1
kind: Service
metadata:
  name: {{ .name }}
  namespace: {{ $.Values.namespace}}
  labels:
    app: {{.name}}
spec:
  type: {{ $.Values.service.type }}
  ports:
    - port: {{ $.Values.service.port }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ $.Values.service.auxiliaryPort }}
      targetPort: aux-port
      protocol: TCP
      name: aux-port
    - port: {{ $.Values.service.logSourcePort }}
      targetPort: log-source-port
      protocol: TCP
      name: log-source-port
    - port: {{ $.Values.service.mcpOverXdsPort }}
      targetPort: 16010
      protocol: TCP
      name: mcp-over-xds
  selector:
    app: {{.name}}
{{- if or (eq (default "" .name) "lazyload") (eq (default "" .kind) "lazyload") }}
{{- if and .global .global.misc }}
{{- if eq (default "off" .global.misc.enableLeaderElection ) "on" }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .name }}-leader
  namespace: {{ $.Values.namespace}}
  labels:
    app: {{.name}}
spec:
  type: {{ $.Values.service.type }}
  ports:
    - port: {{ $.Values.service.port }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ $.Values.service.auxiliaryPort }}
      targetPort: aux-port
      protocol: TCP
      name: aux-port
    - port: {{ $.Values.service.logSourcePort }}
      targetPort: log-source-port
      protocol: TCP
      name: log-source-port
    - port: {{ $.Values.service.mcpOverXdsPort }}
      targetPort: 16010
      protocol: TCP
      name: mcp-over-xds
  selector:
    app: {{.name}}
    slime.io/leader: "true"
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
